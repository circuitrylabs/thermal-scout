[project]
name = "thermal-scout"
version = "0.1.0"
description = "A thermal-aware Hugging Face model search and exploration CLI buddy"
readme = "README.md"
authors = [
    { name = "Tyler James", email = "tyler.chrestoff@hey.com" }
]
requires-python = ">=3.12"
dependencies = [
    "huggingface-hub>=0.33.4",
    "typer>=0.16.0",
    "rich>=14.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
]

[project.scripts]
thermal-scout = "thermal_scout.cli:app"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["thermal_scout"]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "httpx>=0.24.0",
    "ty>=0.0.1a15",
]

[tool.ty]
# ty configuration for blazing-fast type checking
environment.python-version = "3.12"

# Currently ty is pre-alpha with limited rule support
# Using default rules for now

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG001", "ARG002"]  # Unused arguments in tests
"__init__.py" = ["F401"]  # Unused imports in __init__ files

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.coverage.run]
source = ["thermal_scout"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/cli.py",  # CLI tested via CliRunner
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 95

[tool.coverage.html]
directory = "htmlcov"
